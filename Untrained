<!-- Untrained -->
[h: assert(argCount()>1, "Untrained expects four arguments.")]
[h:Name=arg(0)]
[h:Property=arg(1)]
[h:Bonus=arg(2)]
[h:DamageDie=arg(3)]

[h:macro_arguments=0]

[h,macro("Dex@this"): macro_arguments]
[h:Dex=macro.return]

[h:dmgDie="1d"+DamageDie]

[r:"<B>" + (Name) + "</B> (" +  if( (Bonus)!=0, "+" + (Bonus) + " ", "") + (Property) + "  Rapier)<br>"]
Dueling:<br> [t:d20Roll=d20]
[r:if(((d20Roll == 20)),"<span style='color:red;font-weight:bold'>Critical!</span>",if((d20Roll == 1),"<span style='color:red;font-weight:bold'>Critical Failure!</span>"," + "
          + (Dex) + " Dex = <span style='color:blue;font-weight:bold'>"
          + (d20Roll+Bonus+Dex) +
"</span> vs AC"))]
[h:crit=if(d20Roll == 20,1,0)]
[h:fail=if(d20Roll == 1,1,0)]
<br>
For <B>[t(roll.result): eval(dmgDie)+Bonus+Dex]</B>
[t:if(fail,0,if(crit," +"+roll.result+"="+(roll.result*2),""))] Piercing Damage
<br><br>
(Dis)<B>Advantage:</B><br> [t:d20Roll=d20]
[r:if(((d20Roll == 20)),"<span style='color:red;font-weight:bold'>Critical!</span>",if((d20Roll == 1),"<span style='color:red;font-weight:bold'>Critical Failure!</span>"," + "
         + (Dex) + " Dex  = <span style='color:blue;font-weight:bold'>"
         + (d20Roll+Bonus +Dex) +
"</span> vs AC"))]
[h:crit=if(d20Roll == 20,1,0)]
[h:fail=if(d20Roll == 1,1,0)]
<br>
For <B>[t(roll.result): eval(dmgDie)+Bonus+Dex]</B>
[t:if(fail,0,if(crit," +"+roll.result+"="+(roll.result*2),""))] Piercing Damage
